from scipy.stats import ttest_ind
import numpy as np

# LDAScore = [0.631396960993, 0.634565464472, 0.645341211717, 0.635201558808, 
# 0.647423023838, 0.631018603228, 0.638113986367, 0.648156844653, 0.641447357938, 0.644663432509]
# PCBScore = [0.643980608553, 0.655723851767, 0.62713455362, 0.633137354952, 
# 0.654444252455, 0.641140600591, 0.65068030037, 0.633691852313, 0.643824101093, 0.640056875233]

# PCBPScore = [0.623365195437, 0.617054049204, 0.629870913438, 0.623166749383,
# 0.617879374548, 0.627547585477, 0.625592435191, 0.620759526773, 0.626559520383, 0.618822621343]

# PCBPScore_Hard = [0.639838441434, 0.636465241558,0.646944722517, 0.641626154023, 0.635845970799, 
# 0.643307532502, 0.62579660464, 0.642785332138, 0.63665925112, 0.646215573132]

LDAScore = [0.645795863894, 0.634437608759, 0.638786630618, 0.643170394, 
0.641189712098, 0.635046165448, 0.636958736325, 0.646566302269, 0.643401369421, 0.642478021274]

PCBScore = [0.632159551858, 0.644161550749, 0.631683730777, 0.646216608785, 
0.644042741384, 0.634113267669, 0.640742467853, 0.639383999511, 0.634771793571, 0.648308984332]

PCBPScore = [0.672423891544, 0.672449000231, 0.669983101683, 0.669297386636,
0.653066797819, 0.668186905194, 0.664358268178, 0.665596698909, 0.67016159735, 0.661032317203]

PCBPScore_Hard = [0.63653683, 0.633935069041, 0.634954256628, 0.642720587992, 0.643889383852, 
0.636818345876, 0.635153260984, 0.643491232903, 0.635837750191, 0.645271451032]

LDA_article=[0.6370361085,	0.6410624525,	0.643061648,	0.6482584672,	0.6423046329,	0.62852743,	0.6368556451,	0.6308190766,	0.6326106338,	0.6394073354]

print "LDA avg\t", np.average(LDAScore)
print "PCB avg\t", np.average(PCBScore)
print "PCBP avg\t", np.average(PCBPScore)
print "PCBP_Hard avg\t", np.average(PCBPScore_Hard)

(tVal, pVal) = ttest_ind(LDAScore, PCBScore)

(tVal1, pVal1) = ttest_ind(PCBScore, PCBPScore)

(tVal2, pVal2) = ttest_ind(LDAScore, PCBPScore)

(tVal3, pVal3) = ttest_ind(LDAScore, PCBPScore_Hard)

(tVal4, pVal4) = ttest_ind(PCBPScore, LDA_article)


print "tVal%.3f, pVal%.3f"%(tVal, pVal)

print "tVal1_%f, pVal1_%f"%(tVal1, pVal1)

print "tVal2_%f, pVal2_%f"%(tVal2, pVal2)

print "tVal3_%f, pVal3_%f"%(tVal3, pVal3)

print "tVal4_%f, pVal4_%f"%(tVal4, pVal4)

